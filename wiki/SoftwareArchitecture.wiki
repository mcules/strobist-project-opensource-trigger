#summary Software Architecture
#sidebar TableOfContents

= Interrupt Driven Control Flow =

<a href="http://www.flickr.com/photos/9601007@N03/3588834792/" title="Interrupt-driven control flow von Till_Hamburg bei Flickr"><img src="http://farm4.static.flickr.com/3333/3588834792_d43ba85e5c_o.jpg" width="614" height="293" alt="Interrupt-driven control flow" /></a>

== Excerpts from spot.c ==
=== Interrupts ===
{{{
// shutter interrupt
ISR(INT0_vect) {
        transmitFire( getID() );
        PORTD |= LCD_BL;
        setTimer(0, 300);
}

// FIFO ready interrupt 
ISR(INT1_vect) {
        onReceive( rf12_trans(0xB000) );
}

// timer interrupt: counted to 256 (at 1/8 clock)
ISR(TIMER0_OVF_vect) {
        counter++;
}
}}}
=== Main loop with timer handling ===
{{{

int main (void) {

	init();

	while(1) {
 
		if (counter >= 4) {	// 3906,25Hz interrupt frequency => divided by 1000 for ms-ticks => 2.4% too slow
			counter = 0;
			processTimers();
		}

		if( isExpired(0) ) {	// LED off
			PORTD &= ~LCD_BL;
		}

		if( isExpired(1) ) {	// poll buttons
			if( !(PINC & (1<<PINC1)) ) {    // test
				onCursor( CURSOR_PRESS );
			}
			if( !(PINC & (1<<PINC2)) ) {    // down
				onCursor( CURSOR_DOWN );
			}

			// ... same for UP, LEFT, RIGHT

			setTimer(1, 200);
		}
 
		// ... same for other timers
	}
}

}}}
= lcd3110.c: User Interface =

The SPOT is controlled by a 4-way joystick button. If pressed down in Tx mode it transmits a fire signal. In Rx mode it fires the connected flash. The four directions are used for menu navigation as indicated below.

<a href="http://www.flickr.com/photos/9601007@N03/3588026887/" title="User interface navigation von Till_Hamburg bei Flickr"><img src="http://farm4.static.flickr.com/3417/3588026887_38f333ec70_o.jpg" width="702" height="446" alt="User interface navigation" /></a>

= rfm12.c: Radio Protocol =
== Packet definition ==
One packet consists of 2 bytes as the following diagram shows:

<a href="http://www.flickr.com/photos/9601007@N03/3588026923/" title="Radio packet definition von Till_Hamburg bei Flickr"><img src="http://farm4.static.flickr.com/3196/3588026923_3c19ce32cf_o.jpg" width="722" height="135" alt="Radio packet definition" /></a>

== Checksum: Hamming 8-4 ==

Right now, a static code is used. Investigate if improvement is worth the effort.
See http://en.wikipedia.org/wiki/Hamming_code

== Fire command ==
A fire command is accepted by a receiver if
 # cs is correct 
 # f = 1
 # id matches receiver’s id

== Set power and acknowledge command ==
A set power command is accepted by a receiver if
 # cs is correct
 # id matches receiver’s id
 # group matches receiver’s group

After receiving a valid set power command the receiver waits for 1ms (to give the transmitter time to get ready for reception) and then transmits the set power command back as an acknowledgement. The transmitter waits 10ms for the acknowledgment. If it is sent within that timeframe the new power setting is displayed. If not, the currently selected strength blinks twice as a user feedback for an unsuccessful transmission and remains unchanged.